---
version: '3'
services:

  jenkins:
    environment:
      CASC_JENKINS_CONFIG: /var/jenkins_home/casc_configs
      #TODO: how to make these conditional?
      pullStrategy: PULL_NEVER
      DEV_MODE: "true"
      # TODO: In PROD we need to supply a
      #SLACK_TOKEN: ...
    image: docker.sunet.se/jenkins
    networks:
      jenkins_net:
    expose:
      - 50000
      - 8080
    volumes:
# Enable named jenkins_home volume if you would like a persistent jenkins_home
# Othervise, jcasc and job-dsl will populate one.
#      - jenkins_home:/var/jenkins_home:rw
      - ../jcasc_configs/jenkins.yaml:/var/jenkins_home/casc_configs/jenkins.yaml:ro
      # TODO: only in dev_mode
      - ../jcasc_configs/jenkins-dev_mode.yaml:/var/jenkins_home/casc_configs/jenkins-dev_mode.yaml:ro
      - ../jcasc_configs/publish_over_ssh.groovy:/var/jenkins_home/init.groovy.d/publish_over_ssh.groovy:ro
      - ../jcasc_configs/locale.groovy:/var/jenkins_home/init.groovy.d/locale.groovy:ro
      - ../jcasc_configs/ignored_warnings.groovy:/var/jenkins_home/init.groovy.d/ignored_warnings.groovy:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw

  pound:
    image: docker.sunet.se/pound:latest
    networks:
      jenkins_net:
        ipv4_address: 172.16.12.100
    ports:
      - 443:443
    volumes:
      - ../pound/server.pem:/etc/ssl/private/jenkins.jenkins.docker.pem
    environment:
      - "BACKEND_PORT=tcp://jenkins:8080"
      - "REWRITE_LOCATION=0"
    depends_on:
      - jenkins

  # TODO: only in dev_mode
  git-bootstrap-docker-builds:
    image: docker.sunet.se/jenkins
    ports:
      - 9418:9418
    volumes:
      - ../bootstrap-docker-builds:/src/bootstrap-docker-builds:ro
    entrypoint: /usr/bin/git daemon --verbose --base-path=/src/ --export-all

networks:
  jenkins_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.12.0/24
